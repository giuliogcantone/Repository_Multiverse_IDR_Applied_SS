---
title: "Code"
format: html
editor: visual
---

```{r setup}
pacman::p_load(
  tidyverse,
  tidymodels,
  openalexR,
  specr,
  readxl,
  writexl,
  MatchIt,
  proxy,
  rvest,
  tidytext,
  grid,
  cowplot,
ggridges,
  ggExtra,
  hrbrthemes,
heatmaply,
factoextra
)
```

## Sampling Frame

```{r}
concepts = list()

oa_fetch(
  entity = "concepts",
  level = c(0:1)
) -> concepts$ALL

concepts$ALL %>%
  mutate(i = recode(display_name,
                    `Computer science` = "Comp. Sci.",
                    `Political science` = "Law & Pol.",
                    Mathematics = "Math.",
                    `Materials science` = "Materials Sci.",
                    `Environmental science` = "Environ. Sci."
                    ),
         dip = i
  ) -> concepts$ALL

concepts$ALL %>%
  filter(level == 0) -> concepts$zero

concepts$ALL %>%
  filter(level == 1) -> concepts$one

concepts$ALL
```

### Building Zeds

```{r}
Z = list()
```

#### Raw Zed-Zero

```{r}
concepts$zero %>%
  select(i,related_concepts) %>%
  unnest(related_concepts,
         names_sep = "_") %>%
  rename(j = related_concepts_display_name) %>%
    mutate(j = recode(j,
                    `Computer science` = "Comp. Sci.",
                    `Political science` = "Law & Pol.",
                    Mathematics = "Math.",
                    `Materials science` = "Materials Sci.",
                    `Environmental science` = "Environ. Sci."
                    )) %>%
  select(i,j, c = related_concepts_score) -> Z$Raw_0

crossing(i = concepts$zero$dip,
         j = concepts$zero$dip) %>% as_tibble() %>%
  arrange(i,j) %>%
  left_join(Z$Raw_0,
            by = c("i", "j")) %>%
  mutate(c = ifelse(i==j,max(c,na.rm = T),c),
         c = ifelse(is.na(c),0,c)) %>%
  pivot_wider(names_from = j,
              values_from = c,
              values_fill = 0
              ) %>%
  select(i, sort(names(.)[-1])) %>%
  select(-i) %>%
  as.matrix() -> Z$Raw_0

colnames(Z$Raw_0) -> row.names(Z$Raw_0)

proxy::simil(Z$Raw_0, method = "cosine") %>%
  as.matrix(diag = 1) -> Z$Raw_0

ggheatmap(Z$Raw_0, hide_colorbar = T)
```

#### Raw Zed-One

```{r}
concepts$one %>%
  select(i,related_concepts) %>%
  unnest(related_concepts,
         names_sep = "_") %>%
  rename(j = related_concepts_display_name) %>%
  filter(related_concepts_level == 1) %>%
  select(i,j, c = related_concepts_score) -> Z$Raw_1

crossing(i = concepts$one$dip,
         j = concepts$one$dip) %>% as_tibble() %>%
  arrange(i,j) %>%
  left_join(Z$Raw_1,
            by = c("i", "j")) %>%
  mutate(c = ifelse(i==j,max(c,na.rm = T),c),
         c = ifelse(is.na(c),0,c)) %>%
  pivot_wider(names_from = j,
              values_from = c,
              values_fill = 0
              ) %>%
  select(i, sort(names(.)[-1])) %>%
  select(-i) %>%
  as.matrix() -> Z$Raw_1

colnames(Z$Raw_1) -> row.names(Z$Raw_1)

proxy::simil(Z$Raw_1, method = "cosine") %>%
  as.matrix(diag = 1) -> Z$Raw_1
```

#### Corrected Zed-Zero

```{r}
concepts$zero %>%
  select(i,related_concepts) %>%
  unnest(related_concepts,
         names_sep = "_") %>%
  rename(j = related_concepts_display_name) %>%
    mutate(j = recode(j,
                    `Computer science` = "Comp. Sci.",
                    `Political science` = "Law & Pol.",
                    Mathematics = "Math.",
                    `Materials science` = "Materials Sci.",
                    `Environmental science` = "Environ. Sci."
                    )) %>%
  select(i,j, c = related_concepts_score) %>%
  mutate(rank_i = rank(c) + (18 - n()),
         .by = i) %>%
  mutate(rank_j = rank(c) + (18 - n()),
         .by = j) %>%
  mutate(c = rank_i + rank_j) %>%
  select(-c(rank_i,rank_j)) -> Z$Correct_0

crossing(i = concepts$zero$dip,
         j = concepts$zero$dip) %>% as_tibble() %>%
  arrange(i,j) %>%
  left_join(Z$Correct_0,
            by = c("i", "j")) %>%
  mutate(c = ifelse(i==j,38,c),
         c = ifelse(is.na(c),0,c)) %>%
  pivot_wider(names_from = j,
              values_from = c,
              values_fill = 0
              ) %>%
  select(i, sort(names(.)[-1])) %>%
  select(-i) %>%
  as.matrix() -> Z$Correct_0

colnames(Z$Correct_0) -> row.names(Z$Correct_0)

proxy::simil(Z$Correct_0, method = "cosine") %>%
  as.matrix(diag = 1) -> Z$Correct_0

Z$Correct_0 *
  ((Z$Raw_0 %>% sum() - 19) / (Z$Correct_0 %>% sum() - 19)) -> Z$Correct_0
diag(Z$Correct_0) <- 1

ggheatmap(Z$Correct_0, hide_colorbar = T)
```

#### Corrected Zed-One

```{r}
concepts$one %>%
  select(i,related_concepts) %>%
  unnest(related_concepts,
         names_sep = "_") %>%
  rename(j = related_concepts_display_name) %>%
    mutate(j = recode(j,
                    `Computer science` = "Comp. Sci.",
                    `Political science` = "Law & Pol.",
                    Mathematics = "Math.",
                    `Materials science` = "Materials Sci.",
                    `Environmental science` = "Environ. Sci."
                    )) %>%
  select(i,j, c = related_concepts_score) %>%
  mutate(rank_i = rank(c) + (283 - n()),
         .by = i) %>%
  mutate(rank_j = rank(c) + (283 - n()),
         .by = j) %>%
  mutate(c = rank_i + rank_j) %>%
  select(-c(rank_i,rank_j)) -> Z$Correct_1

crossing(i = concepts$one$dip,
         j = concepts$one$dip) %>% as_tibble() %>%
  arrange(i,j) %>%
  left_join(Z$Correct_1,
            by = c("i", "j")) %>%
  mutate(c = ifelse(i==j,284*2,c),
         c = ifelse(is.na(c),0,c)) %>%
  pivot_wider(names_from = j,
              values_from = c,
              values_fill = 0
              ) %>%
  select(i, sort(names(.)[-1])) %>%
  select(-i) %>%
  as.matrix() -> Z$Correct_1

colnames(Z$Correct_1) -> row.names(Z$Correct_1)

proxy::simil(Z$Correct_1, method = "cosine") %>%
  as.matrix(diag = 1) -> Z$Correct_1

Z$Correct_1 *
  ((Z$Raw_1 %>% sum() - 284) / (Z$Correct_1 %>% sum() - 284)) -> Z$Correct_1
diag(Z$Correct_1) <- 1
```

#### Naive Zeds

```{r}
Z$Naive_0 <- diag(1, nrow = nrow(Z$Raw_0), ncol = ncol(Z$Raw_0))
rownames(Z$Naive_0) <- rownames(Z$Raw_0)
colnames(Z$Naive_0) <- colnames(Z$Raw_0)

Z$Naive_1 <- diag(1, nrow = nrow(Z$Raw_1), ncol = ncol(Z$Raw_1))
rownames(Z$Naive_1) <- rownames(Z$Raw_1)
colnames(Z$Naive_1) <- colnames(Z$Raw_1)
```

## Journals Identification

```{r}
journals <- read_excel("ACB.xlsx") %>%
  filter(`Level 2021` %in% c("4.0","4*")) %>%
  transmute(ISSN, Title = Title %>% toupper(),ABS=1) %>%
  full_join(
    read_excel("Area13B.xlsx") %>%
  filter_at(vars(-TITOLO), any_vars(. %>% str_detect("A"))) %>%
  transmute(
    Title = TITOLO %>% toupper(),
    ISSN = ISSN %>% str_replace("‐","-"),
    ANVUR = 1
  )) %>%
  mutate(
    ABS = coalesce(ABS,0),
    ANVUR = coalesce(ANVUR,0)
  ) %>%
  mutate(ANVUR = ifelse(sum(ANVUR > 0),1,0),
         ABS = ifelse(sum(ABS > 0),1,0),
         .by = Title) %>%
  filter(ABS == 1,
         ANVUR == 1) -> journals

journals %>%
  count(Title)

```

### Fetch Journal

```{r}
oa_fetch(
  entity = "venues",
  issn = journals %>% pull(ISSN) %>% unique(),
) %>%
  transmute(id,
              Journal = display_name,
              ISSN = issn,
              counts_by_year,
              works_count,
              x_concepts,
              works_api_url) %>%
  unnest(ISSN) %>%
    left_join(journals %>% select(-Title))  %>%
  distinct(Journal, .keep_all = T) -> journals
```

### Fetch Papers

```{r}
oa_fetch(
  entity = "works",
  primary_location.source.id = journals$id,
  publication_year = c(2013,2015,2017)
) -> papers_raw

papers <- papers_raw %>%
  filter(!author %>% is.na(),
         !publication_date %>% is.na(),
         !referenced_works %>% is.na(),
         !doi %>% is.na()) %>%
  transmute(paper = id,
           title = display_name %>% tolower(),
           author,
           Journal = so,
           publication_date = publication_date %>% as.Date(),
           pub_year = publication_year,
           counts_by_year,
           concepts,
           extratime = (publication_date -
                          as.Date(str_c(pub_year,"-12-31"))) %>%
                                    as.integer()*-1  
                        ) %>%
  arrange(publication_date) %>%
  filter(title %>% str_detect("erratum", negate = T),
         title %>% str_detect("editor", negate = T),
         title %>% str_detect("corrige", negate = T),
         title %>% str_detect("publisher correction", negate = T),
         title %>% str_detect("book review", negate = T),
         title %>% str_detect("isbn", negate = T)
         ) %>%
  distinct(title, .keep_all = T)
  

papers %>%
  unnest(author) %>%
  rename(author = au_display_name) %>%
  filter(!author %>% is.na()) %>%
  count(title) %>%
  rename(n_authors = n) %>%
  right_join(papers) %>%
  mutate(n_authors_class =
           case_when(n_authors <= 3 ~ n_authors %>% as.character(),
                     n_authors > 3 ~ "4+") %>%
           factor(levels = c("1","2","3","4+")),
         n_author_ordinal = 
           case_when(n_authors < 3 ~ n_authors %>% as.integer(),
                     n_authors >= 3 ~ 3)
         ) -> papers
```

### Pooled Journal

```{r}
journals_profile <- papers %>%
  unnest(concepts) %>%
    filter(level < 2,
           score>0) %>%
  select(Journal,paper,pub_year,level,
         i = display_name,p=score) %>%
    mutate(i = recode(i,
                    `Computer science` = "Comp. Sci.",
                    `Political science` = "Law & Pol.",
                    Mathematics = "Math.",
                    `Materials science` = "Materials Sci.",
                    `Environmental science` = "Environ. Sci."
                    )) %>%
  mutate(p = p/sum(p),
         .by = c(paper,level)) %>%
  summarise(p = sum(p),
            .by = c(i,pub_year,Journal,level)) %>%
  mutate(p = p/sum(p),
         .by = c(pub_year,Journal,level)) %>%
  arrange(Journal,pub_year) %>%
  pivot_wider(
    names_from = pub_year,
    values_from = p,
    names_prefix = "p_",
    values_fill = 0) %>%
  complete(i,Journal,
           fill = list(p_2013 = 0,
                       p_2015 = 0,
                       p_2017 = 0)) %>%
  inner_join(concepts$ALL %>%
              select(i,level)) %>%
  full_join(
    journals %>%
  select(-id) %>%
  unnest(x_concepts) %>%
    filter(level < 2,
           score > 0) %>%
      mutate(i = recode(display_name,
                    `Computer science` = "Comp. Sci.",
                    `Political science` = "Law & Pol.",
                    Mathematics = "Math.",
                    `Materials science` = "Materials Sci.",
                    `Environmental science` = "Environ. Sci."
                    )) %>%
  select(Journal,level,i,
         p_e = score) %>%
  mutate(p_e = p_e/sum(p_e),
         .by = c(Journal,level))
  ) %>%
      mutate(
        p_2013 = coalesce(p_e,p_2013),
        p_2015 = coalesce(p_e,p_2015),
        p_2017 = coalesce(p_e,p_2017),
        p_e = coalesce(p_e,0))

papers %>%
  select(paper,Journal,concepts) %>%
  unnest(concepts) %>%
  filter(level < 2,
         score > 0) %>%
  select(paper,Journal,level,
         p_o = score,
         i=display_name) %>%
  mutate(p_o = p_o/sum(p_o),
         .by = c(paper, level)) %>%
  mutate(i = recode(i,
                    `Computer science` = "Comp. Sci.",
                    `Political science` = "Law & Pol.",
                    Mathematics = "Math.",
                    `Materials science` = "Materials Sci.",
                    `Environmental science` = "Environ. Sci."
                    )) %>%
  filter(p_o > 0) -> papers_profiles
```

#### Visuals

```{r}
journals_profile %>%
  filter(level == 0) %>%
  summarise(p_2013 = sum(p_2013),
            p_2015 = sum(p_2015),
            p_2017 = sum(p_2017),
            p_e = sum(p_e),
            .by = i) %>%
  mutate(
    p_2013 = p_2013/sum(p_2013),
    p_2015 = p_2015/sum(p_2015),
    p_2017 = p_2017/sum(p_2017),
    p_e = p_e/sum(p_e)
         ) %>%
  filter(p_2013 > .03) %>%
  arrange(p_e) %>%
  mutate(i = factor(i, levels = i)) %>%
  ggplot() +
  geom_segment(aes(x=p_2013, xend=p_2017,
                   y=i, yend=i), color="#804589") +
  geom_point(aes(x=p_2015, y=i,
             color = "2015")) +
    geom_point(aes(x=p_2013, y=i,
                 color = "2013")) +
    geom_point(aes(x=p_2017, y=i,
             color = "2017")) +
      geom_point(aes(x=p_e, y=i,
                 color = "OA"),
             shape = 15) +
    scale_color_manual(
      values = c("gold","green","navy","firebrick2"),
      guide  = guide_legend(),
      name   = element_blank()
      ) +
  theme_test(base_size = 18) +
  theme(axis.title.y = element_blank(),
        axis.title.x = element_text(size = 12),
            legend.justification = "right",
        legend.position = c(0.97, 0.25),
        legend.box.background = element_blank(),
        legend.key = element_blank(),
        legend.background = element_blank(),
        ) +
  guides(color = guide_legend(keywidth = .1)) +
#  xlab("Semantic shift in 89 prestigious Journals of Business")
 xlab(NULL)

```

```{r}
papers %>%
  ggplot() +
  geom_bar(aes(x = n_authors_class,
                     y = ..count../sum(..count..)),
               fill = "navy")
```

## Pre-process

### Diversity

```{r}
papers_profiles %>%
  filter(level == 0) %>%
summarize(crossed = list(crossing(i, i)),
          .by = paper) %>%
  unnest(crossed) %>%
  rename(
    i = i...1,
    j = i...2
  ) %>%
  left_join(papers_profiles %>% transmute(
      paper,
      i = i,
      p_i = p_o
    )
  ) %>%
    left_join(papers_profiles %>% transmute(
      paper,
      j = i,
      p_j = p_o
    )
  ) %>%
  mutate(d_Raw_0 = map2_dbl(i,j,~Z$Raw_0[.x,.y]),
         d_Naive_0 = map2_dbl(i,j,~Z$Naive_0[.x,.y]),
         d_Correct_0 = map2_dbl(i,j,~Z$Correct_0[.x,.y]),
  ) %>%
  summarise(.by = paper,
            X_Div_k_Raw_0 = sum(p_i*(1 / sum(p_j * d_Raw_0))),
            X_Div_k_Naive_0 = sum(p_i*(1 / sum(p_j * d_Naive_0))),
            X_Div_k_Correct_0 = sum(p_i*(1 / sum(p_j * d_Correct_0))),
            X_Div_Bal_Raw_0 = 1 / sum(p_i * p_j * d_Raw_0),
            X_Div_Bal_Naive_0 = 1 / sum(p_i * p_j * d_Naive_0),
            X_Div_Bal_Correct_0 = 1 / sum(p_i * p_j * d_Correct_0)
            ) %>%
  left_join(papers) -> papers
  
papers_profiles %>%
  filter(level == 1) %>%
summarize(crossed = list(crossing(i, i)),
          .by = paper) %>%
  unnest(crossed) %>%
  rename(
    i = i...1,
    j = i...2
  ) %>%
  left_join(papers_profiles %>% transmute(
      paper,
      i = i,
      p_i = p_o
    )
  ) %>%
    left_join(papers_profiles %>% transmute(
      paper,
      j = i,
      p_j = p_o
    )
  ) %>%
  mutate(d_Raw_1 = map2_dbl(i,j,~Z$Raw_1[.x,.y]),
         d_Naive_1 = map2_dbl(i,j,~Z$Naive_1[.x,.y]),
         d_Correct_1 = map2_dbl(i,j,~Z$Correct_1[.x,.y]),
         .by = paper
  ) %>%
  summarise(.by = paper,
            X_Div_k_Raw_1 = sum(p_i*(1 / sum(p_j * d_Raw_1))),
            X_Div_k_Naive_1 = sum(p_i*(1 / sum(p_j * d_Naive_1))),
            X_Div_k_Correct_1 = sum(p_i*(1 / sum(p_j * d_Correct_1))),
            X_Div_Bal_Raw_1 = 1 / sum(p_i * p_j * d_Raw_1),
            X_Div_Bal_Naive_1 = 1 / sum(p_i * p_j * d_Naive_1),
            X_Div_Bal_Correct_1 = 1 / sum(p_i * p_j * d_Correct_1)
            ) %>%
  left_join(papers) -> papers
```

#### Visualise Diversity

```{r}
papers %>%
  dplyr::select(paper, starts_with("X_Div_")) %>%
  pivot_longer(starts_with("X_Div_")) %>%
  separate(name,
           into = c("X","Div","Measure","Naive","Granul"),
           sep = "_") %>%
  mutate(Measure = Measure %>% factor(levels = c("k",
                                                 "Bal")),
         Naive = Naive %>% factor(levels = c("Naive",
                                                 "Raw",
                                                 "Correct"))
         ) %>%
  pivot_wider(names_from = Granul,
              values_from = value,
              names_prefix = "Granul_") -> div_fig_db
  
ggdraw(
div_fig_db %>%
  ggplot() +
  geom_histogram(aes(x = Granul_0 ,
                     y = ..count../sum(..count..)),
                fill = "firebrick",
                bins = 30,
                alpha = .5,
               ) +
  geom_histogram(aes(Granul_1,
                   y = ..count../sum(..count..)),
                   fill = "navy",
                 bins = 30,
               alpha = .5
               ) +
  theme_test() +
  facet_grid(Measure ~ Naive) +
  theme(
    strip.text = element_blank(),
        strip.background = element_blank(),
        axis.text.x = element_text(size = 10),
        axis.ticks.x = element_line(size = .3),
        axis.ticks.length = unit(0.1, "cm"),
    axis.title.y = element_text(angle = 0),
    legend.position = "none") +
  scale_x_continuous(breaks = c(3, 6, 9)) +
  xlab(expression(Delta * (x-1))) +
  xlab(NULL) +
  ylab(NULL)
) +
  draw_label("Z-Naive\nVariety", .355,.913,hjust=1) +
draw_label("Z-Parametric\nDisparity", .665,.913,hjust=1) +
  draw_label("Z-Semiparam.\nDisparity", .975,.913,hjust = 1) +
  draw_label("Z-Naive\nBalance", .355,.453,hjust=1) +
draw_label("Z-Parametric\nIntegration", .665,.453,hjust=1) +
  draw_label("Z-Semiparam.\nIntegration", .975,.453,hjust=1)

```

### Divergence

```{r}
journals_profile %>%
  select(-level) %>%
  full_join(distinct(papers_profiles,
                     paper, Journal)) %>%
  full_join(papers_profiles %>% select(-level)) %>%
  left_join(concepts$ALL %>%
              select(i,level)) %>%  
  left_join(papers %>% select(paper,pub_year)) %>%
  mutate(p_year =
           case_when(pub_year == 2013 ~ p_2013,
                     pub_year == 2015 ~ p_2015,
                     pub_year == 2017 ~ p_2017)) %>%
  mutate(
    p_e = coalesce(p_e,0),
    p_year = coalesce(p_year,0),
    p_o = coalesce(p_o,0)
         ) %>%
  select(-c(p_2013,p_2015,p_2017)) %>%
  filter(p_e + p_year + p_o > 0) -> papers_profiles
```

```{r}
papers_profiles %>%
  arrange(Journal, paper, i) %>%
  filter(level == 0) %>%
  mutate(z_Raw_0 = map(i, ~ Z$Raw_0[.x,i]),
         z_Naive_0 = map(i, ~ Z$Naive_0[.x,i]),
         z_Correct_0 = map(i, ~ Z$Correct_0[.x,i]),
         .by = paper) %>%
  mutate(p_e_Raw_0 = map_dbl(z_Raw_0, ~ sum(.x * p_e)),
         p_e_Naive_0 = map_dbl(z_Naive_0, ~ sum(.x * p_e)),
         p_e_Correct_0 = map_dbl(z_Correct_0, ~ sum(.x * p_e)),
         p_o_Raw_0 = map_dbl(z_Raw_0, ~ sum(.x * p_o)),
         p_o_Naive_0 = map_dbl(z_Naive_0, ~ sum(.x * p_o)),
         p_o_Correct_0 = map_dbl(z_Correct_0, ~ sum(.x * p_o)),
         p_year_Raw_0 = map_dbl(z_Raw_0, ~ sum(.x * p_year)),
         p_year_Naive_0 = map_dbl(z_Naive_0, ~ sum(.x * p_year)),
         p_year_Correct_0 = map_dbl(z_Correct_0, ~ sum(.x * p_year)),
         p_e_Raw_0 = p_e_Raw_0/sum(p_e_Raw_0),
         p_e_Naive_0 = p_e_Naive_0/sum(p_e_Naive_0),
         p_e_Correct_0 = p_e_Correct_0/sum(p_e_Correct_0),
         p_o_Raw_0 = p_o_Raw_0/sum(p_o_Raw_0),
         p_o_Naive_0 = p_o_Naive_0/sum(p_o_Naive_0),
         p_o_Correct_0 = p_o_Correct_0/sum(p_o_Correct_0),
         p_year_Raw_0 = p_year_Raw_0/sum(p_year_Raw_0),
         p_year_Naive_0 = p_year_Naive_0/sum(p_year_Naive_0),
         p_year_Correct_0 = p_year_Correct_0/sum(p_year_Correct_0),
         .by = paper) %>%
  mutate(across(where(is.numeric),
                ~ ifelse(is.nan(.), 0, .))) %>%
  summarise(
    X_phi_e_Raw_0 = sum((abs(p_e_Raw_0 - p_o_Raw_0)*(p_e_Raw_0))/((abs(p_e_Raw_0) + abs(p_o_Raw_0))), na.rm = T),
    X_phi_e_Naive_0 = sum((abs(p_e_Naive_0 - p_o_Naive_0)*p_e_Naive_0)/((abs(p_e_Naive_0) + abs(p_o_Naive_0))), na.rm = T),
    X_phi_e_Correct_0 = sum((abs(p_e_Correct_0 - p_o_Correct_0)*p_e_Correct_0)/((abs(p_e_Correct_0) + abs(p_o_Correct_0))), na.rm = T),
    X_phi_year_Raw_0 = sum((abs(p_year_Raw_0 - p_o_Raw_0)* p_year_Raw_0)/((abs(p_year_Raw_0) + abs(p_o_Raw_0))), na.rm = T),
    X_phi_year_Naive_0 = sum((abs(p_year_Naive_0 - p_o_Naive_0)*p_year_Naive_0)/((abs(p_year_Naive_0) + abs(p_o_Naive_0))), na.rm = T),
    X_phi_year_Correct_0 = sum((abs(p_year_Correct_0 - p_o_Correct_0)*p_year_Correct_0)/((abs(p_year_Correct_0) + abs(p_o_Correct_0))), na.rm = T),
    .by = paper
  ) %>%
  left_join(
    papers_profiles %>%
  filter(level == 1) %>%
    arrange(Journal, paper, i) %>%
  mutate(z_Raw_1 = map(i, ~ Z$Raw_1[.x,i]),
         z_Naive_1 = map(i, ~ Z$Naive_1[.x,i]),
         z_Correct_1 = map(i, ~ Z$Correct_1[.x,i]),
         .by = paper) %>%
  mutate(p_e_Raw_1 = map_dbl(z_Raw_1, ~ sum(.x * p_e)),
         p_e_Naive_1 = map_dbl(z_Naive_1, ~ sum(.x * p_e)),
         p_e_Correct_1 = map_dbl(z_Correct_1, ~ sum(.x * p_e)),
         p_o_Raw_1 = map_dbl(z_Raw_1, ~ sum(.x * p_o)),
         p_o_Naive_1 = map_dbl(z_Naive_1, ~ sum(.x * p_o)),
         p_o_Correct_1 = map_dbl(z_Correct_1, ~ sum(.x * p_o)),
         p_year_Raw_1 = map_dbl(z_Raw_1, ~ sum(.x * p_year)),
         p_year_Naive_1 = map_dbl(z_Naive_1, ~ sum(.x * p_year)),
         p_year_Correct_1 = map_dbl(z_Correct_1, ~ sum(.x * p_year)),
         p_e_Raw_1 = p_e_Raw_1/sum(p_e_Raw_1),
         p_e_Naive_1 = p_e_Naive_1/sum(p_e_Naive_1),
         p_e_Correct_1 = p_e_Correct_1/sum(p_e_Correct_1),
         p_o_Raw_1 = p_o_Raw_1/sum(p_o_Raw_1),
         p_o_Naive_1 = p_o_Naive_1/sum(p_o_Naive_1),
         p_o_Correct_1 = p_o_Correct_1/sum(p_o_Correct_1),
         p_year_Raw_1 = p_year_Raw_1/sum(p_year_Raw_1),
         p_year_Naive_1 = p_year_Naive_1/sum(p_year_Naive_1),
         p_year_Correct_1 = p_year_Correct_1/sum(p_year_Correct_1),
         .by = paper) %>%
  mutate(across(where(is.numeric),
                ~ ifelse(is.nan(.), 0, .))) %>%
  summarise(
    X_phi_e_Raw_1 = sum((abs(p_e_Raw_1 - p_o_Raw_1)*p_e_Raw_1)/((abs(p_e_Raw_1) + abs(p_o_Raw_1))), na.rm = T),
    X_phi_e_Naive_1 = sum((abs(p_e_Naive_1 - p_o_Naive_1)*p_e_Naive_1)/((abs(p_e_Naive_1) + abs(p_o_Naive_1))), na.rm = T),
    X_phi_e_Correct_1 = sum((abs(p_e_Correct_1 - p_o_Correct_1) * p_e_Correct_1)/((abs(p_e_Correct_1) + abs(p_o_Correct_1))), na.rm = T),
    X_phi_year_Raw_1 = sum((abs(p_year_Raw_1 - p_o_Raw_1) * p_year_Raw_1)/((abs(p_year_Raw_1) + abs(p_o_Raw_1))), na.rm = T),
    X_phi_year_Naive_1 = sum((abs(p_year_Naive_1 - p_o_Naive_1) * p_year_Naive_1)/((abs(p_year_Naive_1) + abs(p_o_Naive_1))), na.rm = T),
    X_phi_year_Correct_1 = sum((abs(p_year_Correct_1 - p_o_Correct_1)*p_year_Correct_1)/((abs(p_year_Correct_1) + abs(p_o_Correct_1))), na.rm = T),
    .by = paper
  )) %>%
  right_join(papers) -> papers
```

#### Visualise Divergence

```{r}
papers %>%
  dplyr::select(paper, starts_with("X_phi_")) %>%
  pivot_longer(starts_with("X_phi_")) %>%
  separate(name,
           into = c("X","phi","Measure","Naive","Granul"),
           sep = "_") %>%
  mutate(Measure = Measure %>% factor(levels = c("year",
                                                 "e")),
         Naive = Naive %>% factor(levels = c("Naive",
                                                 "Raw",
                                                 "Correct"))
         ) %>%
  pivot_wider(names_from = Granul,
              values_from = value,
              names_prefix = "Granul_") -> phi_fig_db
  
ggdraw(
phi_fig_db %>%
  ggplot() +
  geom_histogram(aes(x = Granul_0 ,
                     y = ..count../sum(..count..)),
                fill = "firebrick",
                bins = 30,
                alpha = .5,
               ) +
  geom_histogram(aes(Granul_1,
                   y = ..count../sum(..count..)),
                   fill = "navy",
                 bins = 30,
               alpha = .5
               ) +
  theme_test() +
  facet_grid(Measure ~ Naive) +
  theme(
    strip.text = element_blank(),
        strip.background = element_blank(),
        axis.text.x = element_text(size = 10),
        axis.ticks.x = element_line(size = .3),
        axis.ticks.length = unit(0.1, "cm"),
    axis.title.y = element_text(angle = 0),
    legend.position = "none") +
  scale_x_continuous(breaks = c(.25, .5, .75)) +
  xlab(expression(Delta * (x-1))) +
  xlab(NULL) +
  ylab(NULL)
) +
  draw_label("Z-Naive\nLocal Φ", .355,.913,hjust=1) +
draw_label("Z-Parametric\nLocal Φ", .665,.913,hjust=1) +
  draw_label("Z-Semiparam.\nLocal Φ", .975,.913,hjust = 1) +
  draw_label("Z-Naive\nGlobal Φ", .355,.453,hjust=1) +
draw_label("Z-Parametric\nGlobal Φ", .665,.453,hjust=1) +
  draw_label("Z-Semiparam.\nGlobal Φ", .975,.453,hjust=1)
```

## Results

### Corrmap

```{r}
papers %>%
  select(starts_with("X_")) %>%
  rename_all(~ str_remove(., "X_")) %>%
  transmute(
    "Variety" =
      rowMeans(select(., starts_with("Div_k") & contains("Naive") )),
    "Disparity" =
      rowMeans(select(., starts_with("Div_k") & !contains("Naive") )),
    "Balance" =
      rowMeans(select(., starts_with("Div_k") & contains("Naive") )),
    "Integration" =
      rowMeans(select(., starts_with("Div_k") & !contains("Naive") )),
    "G. Divergence" = rowMeans(select(., starts_with("phi_e"))),
    "L. Divergence" = rowMeans(select(., starts_with("phi_year")))
    ) %>%
      cor() %>%
  ggheatmap()
  

```

### Adding Citations

```{r}
papers %>%
  unnest(counts_by_year) %>%
  rename(c = cited_by_count) %>%
  arrange(paper, year) %>%
  pivot_wider(names_from = year,
              values_from = c) %>%
  mutate_at(vars(starts_with("20")), ~coalesce(., 0)) %>%
  select(-`NA`) %>%
  mutate(y_1 =
           case_when(pub_year == 2013 ~
                       `2013` + `2014`,
                     pub_year == 2015 ~
                       `2015` + `2016`,
                     pub_year == 2017 ~
                       `2017` + `2018`),
         y_3 =
           case_when(pub_year == 2013 ~
                       y_1 + `2015` + `2016`,
                     pub_year == 2015 ~
                       y_1 + `2017` + `2018`,
                     pub_year == 2017 ~
                       y_1 + `2019` + `2020`),
         y_5 =
           case_when(pub_year == 2013 ~
                       y_3 + `2017` + `2018`,
                     pub_year == 2015 ~
                       y_3 + `2019` + `2020`,
                     pub_year == 2017 ~
                       y_3 + `2021` + `2022`)
         ) %>%
  select(-starts_with("20")) -> papers
```

### Checks and Balance

```{r}
papers %>%
  arrange(n_authors_class) %>%
  summarise(.by = n_authors_class,
            n = n(),
            y_1 = median(y_1),
            y_3 = median(y_3),
            y_5 = median(y_5)) %>%
 xtable::xtable() %>% print()

papers %>%
  arrange(pub_year) %>%
  summarise(.by = pub_year,
            n = n(),
            y_1 = median(y_1),
            y_3 = median(y_3),
            y_5 = median(y_5))

papers %>%
  arrange(n_authors_class) %>%
  summarise(.by = n_authors_class,
            across(starts_with("X_phi_") | starts_with("Div_"),
                   ~ mean(., na.rm = TRUE),
                   .names = "mean_{.col}")
            )
```

```{r}
ggdraw(
papers %>%
  select(starts_with("y")) %>%
  pivot_longer(cols = starts_with("y")) %>%
  filter(name %>% str_detect("y")) %>%
  ggplot(aes(x = value+1)) +
  geom_histogram(aes(y = ..count../sum(..count..)), bins = 20, fill = "lightblue", color = "black") +
  scale_x_continuous(
  trans = 'log10',
  labels = scales::trans_format("log10", scales::math_format(10^.x))
) +
  theme_test() +
    facet_grid(name~.) +
   theme(strip.text = element_blank(),
         axis.title.y = element_text(angle = 0)
         ) +
  ylab("f(y)") +
xlab(expression(log[10]("y+1")))
) +
  draw_label("After 1 year", .85, .93) +
  draw_label("After 3 years", .84, .65) +
  draw_label("After 5 years", .84, .37)
```

### Functions

```{r}
results = list()
models = list()

papers <- papers %>%
mutate(
    Bin_Y_g_1 = as.integer(y_1 > median(y_1)),
    Bin_Y_g_3 = as.integer(y_3 > median(y_3)),
    Bin_Y_g_5 = as.integer(y_5 > median(y_5)),
    .by = c(Journal,publication_date,n_author_ordinal),
    ) %>%
  mutate(
    Bin_Y_JouNauth_1 = as.integer(y_1 > median(y_1)),
    Bin_Y_JouNauth_3 = as.integer(y_3 > median(y_3)),
    Bin_Y_JouNauth_5 = as.integer(y_5 > median(y_5)),
    .by = c(Journal,pub_year,n_author_ordinal),
    ) %>%
    mutate(
    Bin_Y_dateNauth_1 = as.integer(y_1 > median(y_1)),
    Bin_Y_dateNauth_3 = as.integer(y_3 > median(y_3)),
    Bin_Y_dateNauth_5 = as.integer(y_5 > median(y_5)),
    .by = c(publication_date,n_author_ordinal),
    ) %>%
      mutate(
    Bin_Y_dateJou_1 = as.integer(y_1 > median(y_1)),
    Bin_Y_dateJou_3 = as.integer(y_3 > median(y_3)),
    Bin_Y_dateJou_5 = as.integer(y_5 > median(y_5)),
    .by = c(publication_date,Journal),
    ) %>%
  mutate(
    Bin_Y_Jou_1 = as.integer(y_1 > median(y_1)),
    Bin_Y_Jou_3 = as.integer(y_3 > median(y_3)),
    Bin_Y_Jou_5 = as.integer(y_5 > median(y_5)),
    .by = c(Journal,pub_year),
    ) %>%
    mutate(
    Bin_Y_Nauth_1 = as.integer(y_1 > median(y_1)),
    Bin_Y_Nauth_3 = as.integer(y_3 > median(y_3)),
    Bin_Y_Nauth_5 = as.integer(y_5 > median(y_5)),
    .by = c(n_author_ordinal,pub_year),
    ) %>%
      mutate(
    Bin_Y_date_1 = as.integer(y_1 > median(y_1)),
    Bin_Y_date_3 = as.integer(y_3 > median(y_3)),
    Bin_Y_date_5 = as.integer(y_5 > median(y_5)),
    .by = c(publication_date),
    )
```

### Functions: Loglinear

```{r}
models$qpois_pool <- function(formula, data, ...) {
  formula <- paste(formula) %>% as.formula()
  fixest::feglm(data = data,
                family = quasipoisson,
           fml = formula)}

models$qpois_fe <- function(formula, data, ...) {
  formula <- paste(formula, "| Journal") %>% as.formula()
  fixest::feglm(data = data,
                family = quasipoisson,
           fml = formula)}

models$negbin_pool <- function(formula, data, ...) {
  formula <- paste(formula) %>% as.formula()
  fixest::fenegbin(data = data,
           fml = formula)}

models$negbin_fe <- function(formula, data, ...) {
  formula <- paste(formula, "| Journal") %>% as.formula()
  fixest::fenegbin(data = data,
           fml = formula)}

```

### Functions: binomial

```{r}
models$logit <- function(formula, data, ...) {
  formula <- paste(formula) %>% as.formula()
  fixest::feglm(data = data,
                family = binomial(link = "logit"),
           fml = formula)}

models$probit <- function(formula, data, ...) {
  formula <- paste(formula) %>% as.formula()
  fixest::feglm(data = data,
                family = binomial(link = "probit"),
           fml = formula)}
```

### Loglinear Multiverses

```{r}
specr::setup(papers,
             x = papers %>%
  select(starts_with("X_")) %>%
  names(),
             y = c("y_1","y_3","y_5"),
             model = models[1:4],
  controls = c("n_author_ordinal","extratime"),
  subsets = list(pub_year = c(2013,2015,2017))
             ) %>%
  specr() %>%
  as_tibble() %>%
  select(-c(model_function,formula,subsets,term)) %>%
  rename(year = pub_year) %>%
  filter(!year %>% is.na()) -> results$loglin

results$loglin %>%
  filter(Meas. %>% str_detect("Delta")) %>%
  summarise(
    beta = median(estimate),
    .by = year
  )

results$loglin %>%
  filter(Meas. %>% str_detect("Phi")) %>%
  summarise(
    beta = median(estimate),
    .by = c(year,Alt.)
  )
```

### Binary Multiverse

```{r}
specr::setup(papers,
             x = papers %>%
  select(starts_with("X_")) %>%
  names(),
             y = papers %>%
  select(starts_with("Bin_Y")) %>%
  names(),
  model = models[5:6],
  subsets = list(
               pub_year = c(2013,2015,2017)
               )
             ) %>%
  specr() %>%
  as_tibble() %>%
  select(-c(model_function,formula,subsets,term)) %>%
  rename(year = pub_year) %>%
  filter(!year %>% is.na()) -> results$binomial
```

### Postprocess

```{r}
results$loglin %>%
  mutate(
        N_a = controls %>% str_detect("n_author_ordinal") %>% as.integer(),
        t = controls %>% str_detect("extratime") %>% as.integer(),
    model = as.character(model),
    FE = case_when(
             model %>% str_detect("Journal") ~ 1,
             TRUE ~ 0
           ),
    model =
           case_when(
             model %>% str_detect("poisson") ~ "QP",
             model %>% str_detect("negbin") ~ "NB",
           ),
    x =
      str_replace(x,"Div","Delta") %>%
      str_replace("phi","Phi") %>%
      str_remove("X_"),
    Lag = recode(y,
                      y_1 = "1 year",
                      y_3 = "3 years",
                      y_5 = "5 years"
         )) %>%
  separate(x,
           into = c("Meas.","Alt.","Z", "Granul."),
           sep = "_") %>%
    mutate(
    Z = Z %>%
      recode(Raw = "Cosine",
             Correct = "RCA",
             Naive = "Naive") %>% factor(levels = c("Naive","Cosine","RCA")),
    ) -> results$loglin

```

```{r}
results$binom %>%
  mutate(
    model = as.character(model),
    Cluster. =
      case_when(
        y %>% str_detect("_g_") ~ "7 - All",
        y %>% str_detect("_dateNauth_") ~ "6 - N_a & Date",
        y %>% str_detect("_JouNauth_") ~ "5 N_a & Journal",
        y %>% str_detect("_dateJou_") ~ "4 Date & Journal",
        y %>% str_detect("_Nauth_") ~ "3 N_a only",
        y %>% str_detect("_Jou_") ~ "2 Journal only",
        y %>% str_detect("_date_") ~ "1 Date only"
      ),
    link =
           case_when(
             model %>% str_detect("logit") ~ "Logit",
             model %>% str_detect("probit") ~ "Probit",
           ),
    x =
      str_replace(x,"Div","Delta") %>%
      str_replace("phi","Phi") %>%
      str_remove("X_"),
    Lag = case_when(y %>% str_ends("_1") ~ "1 year",
                    y %>% str_ends("_3") ~ "3 year",
                    y %>% str_ends("_5") ~ "5 year"
         )
    ) %>%
  separate(x,
           into = c("Meas.","Alt.","Z", "Granul."),
           sep = "_") %>%
    mutate(
    Z = Z %>%
      recode(Raw = "Cosine",
             Correct = "RCA",
             Naive = "Naive") %>% factor(levels = c("Naive","Cosine","RCA"))
    ) -> results$binomial
```

### Visuals

#### Curves

```{r}
plot_grid(
results$loglin %>%
  filter(Meas. %>% str_detect("Delta")) %>%
    specr::plot_curve(null = 0) +
  ylab(expression(beta[Delta]))+
  xlab(expression(rank(beta[Delta]))) +
  theme_test(base_size = 18) +
  theme(axis.title.y = element_text(angle = 0)),
results$loglin %>%
  filter(Meas. %>% str_detect("Phi")) %>%
  specr::plot_curve(null = 0) +
  ylab(expression(beta[Phi]))+
  xlab(expression(rank(beta[Phi]))) +
  theme_test(base_size = 18) +
  theme(axis.title.y = element_text(angle = 0)),
nrow = 2
)

ggsave("curves.png")
```

```{r}
plot_grid(
results$binomial %>%
  filter(Meas. %>% str_detect("Delta")) %>%
    specr::plot_curve(null = 0) +
  ylab(expression(beta[Delta]))+
  xlab(expression(rank(beta[Delta]))) +
  theme_test(base_size = 18) +
  theme(axis.title.y = element_text(angle = 0)),
results$loglin %>%
  filter(Meas. %>% str_detect("Phi")) %>%
  specr::plot_curve(null = 0) +
  ylab(expression(beta[Phi]))+
  xlab(expression(rank(beta[Phi]))) +
  theme_test(base_size = 18) +
  theme(axis.title.y = element_text(angle = 0)),
nrow = 2
)

ggsave("curves2.png")
```

#### Loglin Delta

```{r}
results$loglin %>%
  filter(Meas. %>% str_detect("Delta")) %>%
    mutate(Measure =
           case_when(
             (Alt. == "k") & (Z == "Naive") ~ "1 Variety",
             (Alt. == "k") & (Z == "Cosine") ~ "2 Cos - Disparity",
             (Alt. == "k") & (Z == "RCA") ~ "3 RCA - Disparity",
             (Alt. == "Bal") & (Z == "Naive") ~ "4 Balance",
             (Alt. == "Bal") & (Z == "Cosine") ~ "5 Cos - Integration",
             (Alt. == "Bal") & (Z == "RCA") ~ "6 RCA - Integration")) %>%
             arrange(Measure) %>%
  specr::plot_choices(
    choices  = c("Measure","Granul.","year","Lag",
                 "model","N_a","t","FE")) +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        strip.text = element_text(size = 16),
        axis.text.y = element_text(size = 14))

ggsave("MultiDiv.png", height = 9)
```

#### Loglin Phi

```{r}
results$loglin %>%
  filter(Meas. %>% str_detect("Phi")) %>%
    mutate(Measure =
           case_when(
             (Alt. == "e") & (Z == "Naive") ~ "1 Naive - Global",
             (Alt. == "e") & (Z == "Cosine") ~ "2 Cos - Global",
             (Alt. == "e") & (Z == "RCA") ~ "3 RCA - Global",
             (Alt. == "year") & (Z == "Naive") ~ "4 Naive - Local",
             (Alt. == "year") & (Z == "Cosine") ~ "5 Cos - Local",
             (Alt. == "year") & (Z == "RCA") ~ "6 RCA - Local")) %>%
             arrange(Measure) %>%
  specr::plot_choices(
    choices  = c("Measure","Granul.","year","Lag",
                 "model","N_a","t","FE")) +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank()) +
    theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        strip.text = element_text(size = 16),
        axis.text.y = element_text(size = 14))

ggsave("MultiPhi.png", height = 9)
```

#### Binom Delta

```{r}
results$binom %>%
  filter(Meas. %>% str_detect("Delta")) %>%
  specr::plot_choices(
    choices  = c("Cluster.","Granul.","year","Lag",
                 "link")) +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        strip.text = element_text(size = 16),
        axis.text.y = element_text(size = 14))

ggsave("MultiDiv2.png", height = 9)
```

#### Binom Phi

```{r}
results$binom %>%
  filter(Meas. %>% str_detect("Phi")) %>%
  specr::plot_choices(
    choices  = c("Cluster.","Granul.","year","Lag",
                 "link")) +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        strip.text = element_text(size = 16),
        axis.text.y = element_text(size = 14))

ggsave("MultiPhi2.png", height = 9)
```

## Extension

```{r}
papers %>%
  write_xlsx("papers_db")

papers %>%
  unnest(concepts) %>%
    filter(level == 0) %>%
    mutate(i = recode(display_name,
                    `Computer science` = "Comp. Sci.",
                    `Political science` = "Law & Pol.",
                    Mathematics = "Math.",
                    `Materials science` = "Materials Sci.",
                    `Environmental science` = "Environ. Sci."
                    )) %>%
  arrange(i) %>%
  mutate(score = score/sum(score),
         .by = c(paper)) %>%
  select(-c(display_name,level,wikidata,id)) %>%
  pivot_wider(names_from = i,
              values_from = score,
              values_fill = 0) -> papers

papers %>%
  write_xlsx("extended_papers_db.xlsx")

papers$Economics %>% cor(papers$y_1, method = "kendall")
papers$Economics %>% cor(papers$y_3, method = "kendall")
papers$Economics %>% cor(papers$y_5, method = "kendall")

papers$Business %>% cor(papers$y_1, method = "kendall")
papers$Business %>% cor(papers$y_3, method = "kendall")
papers$Business %>% cor(papers$y_5, method = "kendall")

papers$Math. %>% cor(papers$y_1, method = "kendall")
papers$Math. %>% cor(papers$y_3, method = "kendall")
papers$Math. %>% cor(papers$y_5, method = "kendall")

papers$`Comp. Sci.` %>% cor(papers$y_1, method = "kendall")
papers$`Comp. Sci.` %>% cor(papers$y_3, method = "kendall")
papers$`Comp. Sci.` %>% cor(papers$y_5, method = "kendall")
```

```{r}
results$loglin %>%
  filter(
    Z %in% c("RCA","Cosine"),
    Alt. %in% c("e","Bal"),
    Lag == "5 years",
    N_a == 1,
    FE == 0,
    t == 0
      ) %>%
    mutate(
      estimate =
      case_when(
        Meas. == "Delta" ~ exp(estimate)-1,
        Meas. == "Phi" ~ plogis(estimate)
    )) %>%
  ggplot() +
  geom_density(aes(estimate)) +
  facet_wrap(Granul.~Meas.) +
  theme_linedraw()

results$loglin %>%
  filter(
    Granul. == 1,
    Meas. == "Delta",
    Z %in% c("RCA","Cosine"),
    Alt. %in% c("e","Bal"),
    Lag == "5 years",
    N_a == 1,
    FE == 0,
    t == 0
  ) %>%
  ggplot() +
  geom_density(aes(estimate)) +
  theme_linedraw()
```

```{r}
papers %>%
  select(starts_with("X_")) %>%
  rename_all(~ str_remove(., "X_")) %>%
  rename(PHGCOS0 = phi_e_Raw_0 ,
         PHGCOS1 = phi_e_Raw_1 ,
         PHLCOS_0 = phi_year_Raw_0 ,
         PHLCOS1 = phi_year_Raw_1 ,
         PHGN0 = phi_e_Naive_0 ,
         PHGN1 = phi_e_Naive_1 ,
         PHLN0 = phi_year_Naive_0 ,
         PHLN1 = phi_year_Naive_1 ,
         PHGRCA0 = phi_e_Correct_0 ,
         PHGRCA1 = phi_e_Correct_1 ,
         PHLRCA_0 = phi_year_Correct_0 ,
         PHLRCA_1 = phi_year_Correct_1 ,
         Disp.COS0 = Div_k_Raw_0 ,
         Disp.COS1 = Div_k_Raw_1 ,
         Intg..COS0 = Div_Bal_Raw_0 ,
         Intg.COS1= Div_Bal_Raw_1 ,
         Vart.0 = Div_k_Naive_0 ,
         Vart.1 = Div_k_Naive_1 ,
         Bal.0 = Div_Bal_Naive_0 ,
         Bal.1 = Div_Bal_Naive_1 ,
         Disp._RCA_0 = Div_k_Correct_0 ,
         Disp._RCA_1 = Div_k_Correct_1 ,
         Intg._RCA_0 = Div_Bal_Correct_0 ,
         Intg._RCA_1 = Div_Bal_Correct_1 ,
         ) %>%
  select(ends_with("0")) %>%
  princomp(scale = TRUE) %>%
  fviz_pca_var(repel = TRUE,
               axes = c(1,2),
                  geom = "text")
  
  ggsave("prova.png")
```
